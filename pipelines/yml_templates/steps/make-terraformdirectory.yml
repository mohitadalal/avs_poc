parameters:
- name: module_path
  type: string
  default: "azure/resource_group/v1.1.0"
- name: tfvars_path
  type: string
  default: "development/var_files/con_rg.tfvars"
- name: backend_path
  type: string
- name: provider_path
  type: string
  default: null #"development/aux_files/provider.tf"
- name: final_path_variable
  type: string
  default: terraform_resource_path_variable
- name: module_version
  type: string
- name: provider_path_for_3_33
  type: string

# trigger: none

# pool: ContainerInstance

steps:
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      echo "version: ${{ parameters.module_version }}"
      rm -r terraform_create/ 
      mkdir terraform_create/ -v
      cp  ${{ parameters.module_path }}/* terraform_create/ -v
      
      if [[ "${{ parameters.provider_path }}" != "null" ]];
      then
        cp ${{ parameters.provider_path }} terraform_create/ -v
      fi      
      cp ${{ parameters.backend_path }} terraform_create/ -v
      mv ${{ parameters.tfvars_path }} terraform_create/terraform.tfvars -v
      if [ -f "${{ parameters.module_path }}/example/subscription_variables.tf" ];
      then
        cp ${{ parameters.module_path }}/example/subscription_variables.tf terraform_create/ -v
        mv ${{ parameters.module_path }}/example/provider.tf terraform_create/ -v
        sed -i "s/false/true/g" terraform_create/provider.tf
      elif [ "${{ parameters.module_version }}" == "v1.2.0" ];
      then
        cp ${{ parameters.provider_path_for_3_33 }} terraform_create/provider.tf -v
        sed -i "s/false/true/g" terraform_create/provider.tf
      fi
      cat $(system.defaultworkingdirectory)/terraform_create/provider.tf
      echo "##vso[task.setvariable variable=${{ parameters.final_path_variable }};isoutput=true]$(system.defaultworkingdirectory)/terraform_create/"
    workingDirectory: '$(system.defaultworkingdirectory)'
  displayName: "move_files"
  name: move_files